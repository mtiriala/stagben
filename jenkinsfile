pipeline {
    agent any

    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "172.31.40.209:8081"
        NEXUS_REPOSITORY = "vprofile-release"
        NEXUS_REPOGRP_ID = "vprofile-grp-repo"
        NEXUS_CREDENTIAL_ID = "nexuslogin"
        ARTIFACT_NAME = "co2-0.0.1-SNAPSHOT.jar" // Name of the JAR artifact
        SONARSCANNER = 'sonarscanner'
        SONARSERVER = 'sonarserver'
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn clean install -DskipTests'
            }
        }

        stage('Archive Artifact') {
            steps {
                // Archive the JAR artifact instead of a WAR
                archiveArtifacts artifacts: "target/${ARTIFACT_NAME}", allowEmptyArchive: true
            }
        }
        

        stage('Test') {
            steps {
                script {
                    try {
                        // Run the tests and ignore failures
                        sh 'mvn test'
                    } catch (Exception e) {
                        currentBuild.result = 'SUCCESS' // Mark the build as successful
                        echo 'Test failures are ignored'
                    }
                }
            }
        }
        stage('Checkstyle Analysis'){
            steps {
                sh 'mvn checkstyle:checkstyle'
            }
        }
        stage('Sonar Analysis') {
            environment {
                scannerHome = tool "${SONARSCANNER}"
            }
            steps {
                withSonarQubeEnv("${SONARSERVER}") {
                    sh """${scannerHome}/bin/sonar-scanner \
                    -Dsonar.projectKey=beng \
                    -Dsonar.projectName=beng \
                    -Dsonar.projectVersion=1.0 \
                    -Dsonar.sources=src/ \
                    -Dsonar.java.binaries=target/test-classes/com/example/co2/ \
                    -Dsonar.junit.reportPaths=target/surefire-reports/ \
                    -Dsonar.jacoco.reportPaths=target/jacoco.exec \
                    -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml"""
                }
            }
        }   
    }
}
